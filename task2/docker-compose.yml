networks:
  practical-work-7-network:
    driver: bridge

x-kafka-common: &kafka-common
  image: bitnami/kafka:3.9.0
  networks:
    - practical-work-7-network

x-kafka-common-env: &kafka-common-env
  KAFKA_ENABLE_KRAFT: yes
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-controller-0:9091,1001@kafka-controller-1:9092,1002@kafka-controller-2:9093
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
  ALLOW_PLAINTEXT_LISTENER: yes
  KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1w

services:
  kafka-controller-0:
    <<: *kafka-common
    container_name: kafka-controller-0
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_NODE_ID: 1000
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9091

  kafka-controller-1:
    <<: *kafka-common
    container_name: kafka-controller-1
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_NODE_ID: 1001
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9092

  kafka-controller-2:
    <<: *kafka-common
    container_name: kafka-controller-2
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_NODE_ID: 1002
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9093

  kafka-broker-0:
    <<: *kafka-common
    container_name: kafka-broker-0
    depends_on:
      - kafka-controller-0
      - kafka-controller-1
      - kafka-controller-2
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-0:9092
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_CFG_MIN_INSYNC_REPLICAS: 2
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true

  kafka-broker-1:
    <<: *kafka-common
    container_name: kafka-broker-1
    depends_on:
      - kafka-controller-0
      - kafka-controller-1
      - kafka-controller-2
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-1:9092
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_CFG_MIN_INSYNC_REPLICAS: 2
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true

  kafka-broker-2:
    <<: *kafka-common
    container_name: kafka-broker-2
    depends_on:
      - kafka-controller-0
      - kafka-controller-1
      - kafka-controller-2
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-2:9092
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_CFG_MIN_INSYNC_REPLICAS: 2
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true

  producer-app:
    build: ./producer
    container_name: producer
    depends_on:
      kafka-broker-0:
        condition: service_healthy
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
    networks:
      - practical-work-7-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - practical-work-7-network
    ports:
      - "8081:8080"
    depends_on:
      kafka-broker-0:
        condition: service_healthy
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: PRACTICAL-WORK-7-KAFKA-CLUSTER
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker-0:9092,kafka-broker-1:9092,kafka-broker-2:9092

  nifi:
    image: apache/nifi:1.21.0
    container_name: nifi
    user: "root"
    ports:
      - "8080:8080"
    networks:
      - practical-work-7-network
    environment:
      NIFI_WEB_HTTP_PORT: 8080